{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhsj\\\\OneDrive\\\\Desktop\\\\New folder\\\\weather-app\\\\src\\\\components\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS for styling\nimport Marquee from 'react-fast-marquee'; // Import Marquee component\n\n// Define your API key as a constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'XFXyFO6PhxoNZ7Q5GW9aplmrRfeolgff';\nfunction App() {\n  _s();\n  const defaultCities = ['Mumbai', 'Delhi', 'Chennai', 'Kolkata'];\n  const [cities, setCities] = useState(defaultCities);\n  const [weatherData, setWeatherData] = useState({});\n  const [inputCity, setInputCity] = useState('');\n\n  // Function to fetch weather data for a city\n  const fetchWeatherData = async cityName => {\n    try {\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${encodeURIComponent(cityName)}&apikey=${API_KEY}`);\n      setWeatherData(prevData => ({\n        ...prevData,\n        [cityName]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching weather data for', cityName, ':', error);\n    }\n  };\n\n  // Function to fetch weather data based on coordinates\n  const fetchWeatherDataByCoordinates = async (latitude, longitude) => {\n    try {\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${latitude},${longitude}&apikey=${API_KEY}`);\n      const cityName = response.data.data.location.city;\n      setWeatherData(prevData => ({\n        ...prevData,\n        [cityName]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching weather data for coordinates:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch weather data for default cities\n    defaultCities.forEach(city => fetchWeatherData(city));\n  }, []);\n  const handleCityChange = event => {\n    setInputCity(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetchWeatherData(inputCity);\n  };\n  const handleGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherDataByCoordinates(latitude, longitude);\n      }, error => {\n        console.error('Error getting user location:', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Real-Time Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-city\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter city name\",\n          value: inputCity,\n          onChange: handleCityChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"10px\"\n        },\n        children: inputCity && weatherData[inputCity] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-input1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: inputCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weatherData[inputCity].data.values.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData[inputCity].data.values.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cloud Cover: \", weatherData[inputCity].data.values.cloudCover, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData[inputCity].data.values.windSpeed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"UV Index: \", weatherData[inputCity].data.values.uvIndex]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Visibility: \", weatherData[inputCity].data.values.visibility, \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"default-cities\",\n      children: /*#__PURE__*/_jsxDEV(Marquee, {\n        gradient: false,\n        speed: 100,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: defaultCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), weatherData[city] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Temperature: \", weatherData[city].data.values.temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Humidity: \", weatherData[city].data.values.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Cloud Cover: \", weatherData[city].data.values.cloudCover, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Wind Speed: \", weatherData[city].data.values.windSpeed, \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"UV Index: \", weatherData[city].data.values.uvIndex]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Visibility: \", weatherData[city].data.values.visibility, \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"geolocation\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGeoLocation,\n        children: \"Get Weather Based on Current Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zqQx382WX/7qoncGHAOMgnZoKw4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Marquee","jsxDEV","_jsxDEV","API_KEY","App","_s","defaultCities","cities","setCities","weatherData","setWeatherData","inputCity","setInputCity","fetchWeatherData","cityName","response","get","encodeURIComponent","prevData","data","error","console","fetchWeatherDataByCoordinates","latitude","longitude","location","city","forEach","handleCityChange","event","target","value","handleSubmit","preventDefault","handleGeoLocation","navigator","geolocation","getCurrentPosition","position","coords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","style","display","justifyContent","padding","values","temperature","humidity","cloudCover","windSpeed","uvIndex","visibility","gradient","speed","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akhsj/OneDrive/Desktop/New folder/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Import CSS for styling\r\nimport Marquee from 'react-fast-marquee'; // Import Marquee component\r\n\r\n// Define your API key as a constant\r\nconst API_KEY = 'XFXyFO6PhxoNZ7Q5GW9aplmrRfeolgff';\r\n\r\nfunction App() {\r\n  const defaultCities = ['Mumbai', 'Delhi', 'Chennai', 'Kolkata'];\r\n  const [cities, setCities] = useState(defaultCities);\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [inputCity, setInputCity] = useState('');\r\n\r\n  // Function to fetch weather data for a city\r\n  const fetchWeatherData = async (cityName) => {\r\n    try {\r\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${encodeURIComponent(cityName)}&apikey=${API_KEY}`);\r\n      setWeatherData((prevData) => ({ ...prevData, [cityName]: response.data }));\r\n    } catch (error) {\r\n      console.error('Error fetching weather data for', cityName, ':', error);\r\n    }\r\n  };\r\n\r\n  // Function to fetch weather data based on coordinates\r\n  const fetchWeatherDataByCoordinates = async (latitude, longitude) => {\r\n    try {\r\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${latitude},${longitude}&apikey=${API_KEY}`);\r\n      const cityName = response.data.data.location.city;\r\n      setWeatherData((prevData) => ({ ...prevData, [cityName]: response.data }));\r\n    } catch (error) {\r\n      console.error('Error fetching weather data for coordinates:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch weather data for default cities\r\n    defaultCities.forEach((city) => fetchWeatherData(city));\r\n  }, []);\r\n\r\n  const handleCityChange = (event) => {\r\n    setInputCity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetchWeatherData(inputCity);\r\n  };\r\n\r\n  const handleGeoLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        fetchWeatherDataByCoordinates(latitude, longitude);\r\n      }, (error) => {\r\n        console.error('Error getting user location:', error);\r\n      });\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header>\r\n        <h1>Weather Dashboard</h1>\r\n        <p>Real-Time Weather Information</p>\r\n      </header>\r\n      <div className=\"input-city\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter city name\"\r\n            value={inputCity}\r\n            onChange={handleCityChange}\r\n          />\r\n          <button type=\"submit\">Get Weather</button>\r\n        </form>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", padding: \"10px\" }}>\r\n          {inputCity && weatherData[inputCity] && (\r\n            <div className=\"weather-input1\">\r\n              <h3>{inputCity}</h3>\r\n              <p>Temperature: {weatherData[inputCity].data.values.temperature}°C</p>\r\n              <p>Humidity: {weatherData[inputCity].data.values.humidity}%</p>\r\n              <p>Cloud Cover: {weatherData[inputCity].data.values.cloudCover}%</p>\r\n              <p>Wind Speed: {weatherData[inputCity].data.values.windSpeed} m/s</p>\r\n              <p>UV Index: {weatherData[inputCity].data.values.uvIndex}</p>\r\n              <p>Visibility: {weatherData[inputCity].data.values.visibility} km</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"default-cities\">\r\n        <Marquee gradient={false} speed={100}>\r\n          <div className=\"weather-container\">\r\n            {defaultCities.map((city, index) => (\r\n              <div key={index} className=\"weather-card\">\r\n                <h3>{city}</h3>\r\n                {weatherData[city] ? (\r\n                  <div>\r\n                    <p>Temperature: {weatherData[city].data.values.temperature}°C</p>\r\n                    <p>Humidity: {weatherData[city].data.values.humidity}%</p>\r\n                    <p>Cloud Cover: {weatherData[city].data.values.cloudCover}%</p>\r\n                    <p>Wind Speed: {weatherData[city].data.values.windSpeed} m/s</p>\r\n                    <p>UV Index: {weatherData[city].data.values.uvIndex}</p>\r\n                    <p>Visibility: {weatherData[city].data.values.visibility} km</p>\r\n                  </div>\r\n                ) : (\r\n                  <p>Loading...</p>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Marquee>\r\n      </div>\r\n      <div className=\"geolocation\">\r\n        <button onClick={handleGeoLocation}>Get Weather Based on Current Location</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}