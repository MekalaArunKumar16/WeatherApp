{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhsj\\\\OneDrive\\\\Desktop\\\\New folder\\\\weather-app\\\\src\\\\components\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS for styling\n\n// Define your API key as a constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'XFXyFO6PhxoNZ7Q5GW9aplmrRfeolgff';\nfunction App() {\n  _s();\n  const [cities, setCities] = useState(['Toronto', 'Mumbai', 'Chennai', 'Delhi', 'Kolkata']);\n  const [weatherData, setWeatherData] = useState({});\n  const fetchWeatherData = async cityName => {\n    try {\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${encodeURIComponent(cityName)}&apikey=${API_KEY}`);\n      setWeatherData(prevData => ({\n        ...prevData,\n        [cityName]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching weather data for', cityName, ':', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch weather data for each city\n    cities.forEach(city => fetchWeatherData(city));\n  }, [cities]);\n  const handleInputChange = event => {\n    setCities(event.target.value.split(',').map(city => city.trim()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city names separated by comma\",\n        value: cities.join(', '),\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: Object.keys(weatherData).length > 0 && cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", weatherData[city].data.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weatherData[city].data.values.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weatherData[city].data.values.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cloud Cover: \", weatherData[city].data.values.cloudCover, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", weatherData[city].data.values.windSpeed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"UV Index: \", weatherData[city].data.values.uvIndex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Visibility: \", weatherData[city].data.values.visibility, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4bhEYF8yIBe9NMD5u7f5miTwnUc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_KEY","App","_s","cities","setCities","weatherData","setWeatherData","fetchWeatherData","cityName","response","get","encodeURIComponent","prevData","data","error","console","forEach","city","handleInputChange","event","target","value","split","map","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","placeholder","join","onChange","className","Object","keys","length","index","time","values","temperature","humidity","cloudCover","windSpeed","uvIndex","visibility","_c","$RefreshReg$"],"sources":["C:/Users/akhsj/OneDrive/Desktop/New folder/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Import CSS for styling\r\n\r\n// Define your API key as a constant\r\nconst API_KEY = 'XFXyFO6PhxoNZ7Q5GW9aplmrRfeolgff'\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState(['Toronto', 'Mumbai', 'Chennai', 'Delhi', 'Kolkata']);\r\n  const [weatherData, setWeatherData] = useState({});\r\n\r\n  const fetchWeatherData = async (cityName) => {\r\n    try {\r\n      const response = await axios.get(`https://api.tomorrow.io/v4/weather/realtime?location=${encodeURIComponent(cityName)}&apikey=${API_KEY}`);\r\n      setWeatherData((prevData) => ({ ...prevData, [cityName]: response.data }));\r\n    } catch (error) {\r\n      console.error('Error fetching weather data for', cityName, ':', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch weather data for each city\r\n    cities.forEach((city) => fetchWeatherData(city));\r\n  }, [cities]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setCities(event.target.value.split(',').map(city => city.trim()));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Real-Time Weather Data</h1>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter city names separated by comma\"\r\n          value={cities.join(', ')}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n      <div className=\"weather-container\">\r\n        {Object.keys(weatherData).length > 0 && cities.map((city, index) => (\r\n          <div key={index} className=\"weather-card\">\r\n            <h2>{city}</h2>\r\n            <p>Time: {weatherData[city].data.time}</p>\r\n            <p>Temperature: {weatherData[city].data.values.temperature}Â°C</p>\r\n            <p>Humidity: {weatherData[city].data.values.humidity}%</p>\r\n            <p>Cloud Cover: {weatherData[city].data.values.cloudCover}%</p>\r\n            <p>Wind Speed: {weatherData[city].data.values.windSpeed} m/s</p>\r\n            <p>UV Index: {weatherData[city].data.values.uvIndex}</p>\r\n            <p>Visibility: {weatherData[city].data.values.visibility} km</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;EAC1F,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,MAAMY,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,wDAAuDC,kBAAkB,CAACH,QAAQ,CAAE,WAAUR,OAAQ,EAAC,CAAC;MAC1IM,cAAc,CAAEM,QAAQ,KAAM;QAAE,GAAGA,QAAQ;QAAE,CAACJ,QAAQ,GAAGC,QAAQ,CAACI;MAAK,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,EAAE,GAAG,EAAEM,KAAK,CAAC;IACxE;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd;IACAO,MAAM,CAACa,OAAO,CAAEC,IAAI,IAAKV,gBAAgB,CAACU,IAAI,CAAC,CAAC;EAClD,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMe,iBAAiB,GAAIC,KAAK,IAAK;IACnCf,SAAS,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B9B,OAAA;MAAM+B,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;MAAAP,QAAA,eACxC1B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qCAAqC;QACjDb,KAAK,EAAElB,MAAM,CAACgC,IAAI,CAAC,IAAI,CAAE;QACzBC,QAAQ,EAAElB;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACP9B,OAAA;MAAKsC,SAAS,EAAC,mBAAmB;MAAAZ,QAAA,EAC/Ba,MAAM,CAACC,IAAI,CAAClC,WAAW,CAAC,CAACmC,MAAM,GAAG,CAAC,IAAIrC,MAAM,CAACoB,GAAG,CAAC,CAACN,IAAI,EAAEwB,KAAK,kBAC7D1C,OAAA;QAAiBsC,SAAS,EAAC,cAAc;QAAAZ,QAAA,gBACvC1B,OAAA;UAAA0B,QAAA,EAAKR;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACf9B,OAAA;UAAA0B,QAAA,GAAG,QAAM,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC6B,IAAI;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1C9B,OAAA;UAAA0B,QAAA,GAAG,eAAa,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACC,WAAW,EAAC,OAAE;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjE9B,OAAA;UAAA0B,QAAA,GAAG,YAAU,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACE,QAAQ,EAAC,GAAC;QAAA;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1D9B,OAAA;UAAA0B,QAAA,GAAG,eAAa,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACG,UAAU,EAAC,GAAC;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/D9B,OAAA;UAAA0B,QAAA,GAAG,cAAY,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACI,SAAS,EAAC,MAAI;QAAA;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChE9B,OAAA;UAAA0B,QAAA,GAAG,YAAU,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACK,OAAO;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxD9B,OAAA;UAAA0B,QAAA,GAAG,cAAY,EAACpB,WAAW,CAACY,IAAI,CAAC,CAACJ,IAAI,CAAC8B,MAAM,CAACM,UAAU,EAAC,KAAG;QAAA;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GARxDY,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAjDQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}